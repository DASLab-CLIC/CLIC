/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fdu.daslab.thrift.base;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-06-16")
public class Job implements org.apache.thrift.TBase<Job, Job._Fields>, java.io.Serializable, Cloneable, Comparable<Job> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Job");

  private static final org.apache.thrift.protocol.TField JOB_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("jobName", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SUBPLANS_FIELD_DESC = new org.apache.thrift.protocol.TField("subplans", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField SOURCE_STAGES_FIELD_DESC = new org.apache.thrift.protocol.TField("sourceStages", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField JOB_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("jobStatus", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("startTime", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("endTime", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField OTHERS_FIELD_DESC = new org.apache.thrift.protocol.TField("others", org.apache.thrift.protocol.TType.MAP, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new JobStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new JobTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String jobName; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,Stage> subplans; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> sourceStages; // required
  /**
   * 
   * @see ExecutionStatus
   */
  public @org.apache.thrift.annotation.Nullable ExecutionStatus jobStatus; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String startTime; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String endTime; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> others; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOB_NAME((short)1, "jobName"),
    SUBPLANS((short)2, "subplans"),
    SOURCE_STAGES((short)3, "sourceStages"),
    /**
     * 
     * @see ExecutionStatus
     */
    JOB_STATUS((short)4, "jobStatus"),
    START_TIME((short)5, "startTime"),
    END_TIME((short)6, "endTime"),
    OTHERS((short)16, "others");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOB_NAME
          return JOB_NAME;
        case 2: // SUBPLANS
          return SUBPLANS;
        case 3: // SOURCE_STAGES
          return SOURCE_STAGES;
        case 4: // JOB_STATUS
          return JOB_STATUS;
        case 5: // START_TIME
          return START_TIME;
        case 6: // END_TIME
          return END_TIME;
        case 16: // OTHERS
          return OTHERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOB_NAME, new org.apache.thrift.meta_data.FieldMetaData("jobName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SUBPLANS, new org.apache.thrift.meta_data.FieldMetaData("subplans", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32), 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Stage.class))));
    tmpMap.put(_Fields.SOURCE_STAGES, new org.apache.thrift.meta_data.FieldMetaData("sourceStages", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.JOB_STATUS, new org.apache.thrift.meta_data.FieldMetaData("jobStatus", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ExecutionStatus.class)));
    tmpMap.put(_Fields.START_TIME, new org.apache.thrift.meta_data.FieldMetaData("startTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.END_TIME, new org.apache.thrift.meta_data.FieldMetaData("endTime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OTHERS, new org.apache.thrift.meta_data.FieldMetaData("others", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Job.class, metaDataMap);
  }

  public Job() {
    this.subplans = new java.util.HashMap<java.lang.Integer,Stage>();

    this.sourceStages = new java.util.ArrayList<java.lang.Integer>();

    this.others = new java.util.HashMap<java.lang.String,java.lang.String>();

  }

  public Job(
    java.lang.String jobName,
    java.util.Map<java.lang.Integer,Stage> subplans,
    java.util.List<java.lang.Integer> sourceStages,
    ExecutionStatus jobStatus,
    java.lang.String startTime,
    java.lang.String endTime,
    java.util.Map<java.lang.String,java.lang.String> others)
  {
    this();
    this.jobName = jobName;
    this.subplans = subplans;
    this.sourceStages = sourceStages;
    this.jobStatus = jobStatus;
    this.startTime = startTime;
    this.endTime = endTime;
    this.others = others;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Job(Job other) {
    if (other.isSetJobName()) {
      this.jobName = other.jobName;
    }
    if (other.isSetSubplans()) {
      java.util.Map<java.lang.Integer,Stage> __this__subplans = new java.util.HashMap<java.lang.Integer,Stage>(other.subplans.size());
      for (java.util.Map.Entry<java.lang.Integer, Stage> other_element : other.subplans.entrySet()) {

        java.lang.Integer other_element_key = other_element.getKey();
        Stage other_element_value = other_element.getValue();

        java.lang.Integer __this__subplans_copy_key = other_element_key;

        Stage __this__subplans_copy_value = new Stage(other_element_value);

        __this__subplans.put(__this__subplans_copy_key, __this__subplans_copy_value);
      }
      this.subplans = __this__subplans;
    }
    if (other.isSetSourceStages()) {
      java.util.List<java.lang.Integer> __this__sourceStages = new java.util.ArrayList<java.lang.Integer>(other.sourceStages);
      this.sourceStages = __this__sourceStages;
    }
    if (other.isSetJobStatus()) {
      this.jobStatus = other.jobStatus;
    }
    if (other.isSetStartTime()) {
      this.startTime = other.startTime;
    }
    if (other.isSetEndTime()) {
      this.endTime = other.endTime;
    }
    if (other.isSetOthers()) {
      java.util.Map<java.lang.String,java.lang.String> __this__others = new java.util.HashMap<java.lang.String,java.lang.String>(other.others);
      this.others = __this__others;
    }
  }

  public Job deepCopy() {
    return new Job(this);
  }

  @Override
  public void clear() {
    this.jobName = null;
    this.subplans = new java.util.HashMap<java.lang.Integer,Stage>();

    this.sourceStages = new java.util.ArrayList<java.lang.Integer>();

    this.jobStatus = null;
    this.startTime = null;
    this.endTime = null;
    this.others = new java.util.HashMap<java.lang.String,java.lang.String>();

  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getJobName() {
    return this.jobName;
  }

  public Job setJobName(@org.apache.thrift.annotation.Nullable java.lang.String jobName) {
    this.jobName = jobName;
    return this;
  }

  public void unsetJobName() {
    this.jobName = null;
  }

  /** Returns true if field jobName is set (has been assigned a value) and false otherwise */
  public boolean isSetJobName() {
    return this.jobName != null;
  }

  public void setJobNameIsSet(boolean value) {
    if (!value) {
      this.jobName = null;
    }
  }

  public int getSubplansSize() {
    return (this.subplans == null) ? 0 : this.subplans.size();
  }

  public void putToSubplans(int key, Stage val) {
    if (this.subplans == null) {
      this.subplans = new java.util.HashMap<java.lang.Integer,Stage>();
    }
    this.subplans.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.Integer,Stage> getSubplans() {
    return this.subplans;
  }

  public Job setSubplans(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Integer,Stage> subplans) {
    this.subplans = subplans;
    return this;
  }

  public void unsetSubplans() {
    this.subplans = null;
  }

  /** Returns true if field subplans is set (has been assigned a value) and false otherwise */
  public boolean isSetSubplans() {
    return this.subplans != null;
  }

  public void setSubplansIsSet(boolean value) {
    if (!value) {
      this.subplans = null;
    }
  }

  public int getSourceStagesSize() {
    return (this.sourceStages == null) ? 0 : this.sourceStages.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getSourceStagesIterator() {
    return (this.sourceStages == null) ? null : this.sourceStages.iterator();
  }

  public void addToSourceStages(int elem) {
    if (this.sourceStages == null) {
      this.sourceStages = new java.util.ArrayList<java.lang.Integer>();
    }
    this.sourceStages.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Integer> getSourceStages() {
    return this.sourceStages;
  }

  public Job setSourceStages(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> sourceStages) {
    this.sourceStages = sourceStages;
    return this;
  }

  public void unsetSourceStages() {
    this.sourceStages = null;
  }

  /** Returns true if field sourceStages is set (has been assigned a value) and false otherwise */
  public boolean isSetSourceStages() {
    return this.sourceStages != null;
  }

  public void setSourceStagesIsSet(boolean value) {
    if (!value) {
      this.sourceStages = null;
    }
  }

  /**
   * 
   * @see ExecutionStatus
   */
  @org.apache.thrift.annotation.Nullable
  public ExecutionStatus getJobStatus() {
    return this.jobStatus;
  }

  /**
   * 
   * @see ExecutionStatus
   */
  public Job setJobStatus(@org.apache.thrift.annotation.Nullable ExecutionStatus jobStatus) {
    this.jobStatus = jobStatus;
    return this;
  }

  public void unsetJobStatus() {
    this.jobStatus = null;
  }

  /** Returns true if field jobStatus is set (has been assigned a value) and false otherwise */
  public boolean isSetJobStatus() {
    return this.jobStatus != null;
  }

  public void setJobStatusIsSet(boolean value) {
    if (!value) {
      this.jobStatus = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStartTime() {
    return this.startTime;
  }

  public Job setStartTime(@org.apache.thrift.annotation.Nullable java.lang.String startTime) {
    this.startTime = startTime;
    return this;
  }

  public void unsetStartTime() {
    this.startTime = null;
  }

  /** Returns true if field startTime is set (has been assigned a value) and false otherwise */
  public boolean isSetStartTime() {
    return this.startTime != null;
  }

  public void setStartTimeIsSet(boolean value) {
    if (!value) {
      this.startTime = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEndTime() {
    return this.endTime;
  }

  public Job setEndTime(@org.apache.thrift.annotation.Nullable java.lang.String endTime) {
    this.endTime = endTime;
    return this;
  }

  public void unsetEndTime() {
    this.endTime = null;
  }

  /** Returns true if field endTime is set (has been assigned a value) and false otherwise */
  public boolean isSetEndTime() {
    return this.endTime != null;
  }

  public void setEndTimeIsSet(boolean value) {
    if (!value) {
      this.endTime = null;
    }
  }

  public int getOthersSize() {
    return (this.others == null) ? 0 : this.others.size();
  }

  public void putToOthers(java.lang.String key, java.lang.String val) {
    if (this.others == null) {
      this.others = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.others.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getOthers() {
    return this.others;
  }

  public Job setOthers(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> others) {
    this.others = others;
    return this;
  }

  public void unsetOthers() {
    this.others = null;
  }

  /** Returns true if field others is set (has been assigned a value) and false otherwise */
  public boolean isSetOthers() {
    return this.others != null;
  }

  public void setOthersIsSet(boolean value) {
    if (!value) {
      this.others = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case JOB_NAME:
      if (value == null) {
        unsetJobName();
      } else {
        setJobName((java.lang.String)value);
      }
      break;

    case SUBPLANS:
      if (value == null) {
        unsetSubplans();
      } else {
        setSubplans((java.util.Map<java.lang.Integer,Stage>)value);
      }
      break;

    case SOURCE_STAGES:
      if (value == null) {
        unsetSourceStages();
      } else {
        setSourceStages((java.util.List<java.lang.Integer>)value);
      }
      break;

    case JOB_STATUS:
      if (value == null) {
        unsetJobStatus();
      } else {
        setJobStatus((ExecutionStatus)value);
      }
      break;

    case START_TIME:
      if (value == null) {
        unsetStartTime();
      } else {
        setStartTime((java.lang.String)value);
      }
      break;

    case END_TIME:
      if (value == null) {
        unsetEndTime();
      } else {
        setEndTime((java.lang.String)value);
      }
      break;

    case OTHERS:
      if (value == null) {
        unsetOthers();
      } else {
        setOthers((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case JOB_NAME:
      return getJobName();

    case SUBPLANS:
      return getSubplans();

    case SOURCE_STAGES:
      return getSourceStages();

    case JOB_STATUS:
      return getJobStatus();

    case START_TIME:
      return getStartTime();

    case END_TIME:
      return getEndTime();

    case OTHERS:
      return getOthers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case JOB_NAME:
      return isSetJobName();
    case SUBPLANS:
      return isSetSubplans();
    case SOURCE_STAGES:
      return isSetSourceStages();
    case JOB_STATUS:
      return isSetJobStatus();
    case START_TIME:
      return isSetStartTime();
    case END_TIME:
      return isSetEndTime();
    case OTHERS:
      return isSetOthers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Job)
      return this.equals((Job)that);
    return false;
  }

  public boolean equals(Job that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_jobName = true && this.isSetJobName();
    boolean that_present_jobName = true && that.isSetJobName();
    if (this_present_jobName || that_present_jobName) {
      if (!(this_present_jobName && that_present_jobName))
        return false;
      if (!this.jobName.equals(that.jobName))
        return false;
    }

    boolean this_present_subplans = true && this.isSetSubplans();
    boolean that_present_subplans = true && that.isSetSubplans();
    if (this_present_subplans || that_present_subplans) {
      if (!(this_present_subplans && that_present_subplans))
        return false;
      if (!this.subplans.equals(that.subplans))
        return false;
    }

    boolean this_present_sourceStages = true && this.isSetSourceStages();
    boolean that_present_sourceStages = true && that.isSetSourceStages();
    if (this_present_sourceStages || that_present_sourceStages) {
      if (!(this_present_sourceStages && that_present_sourceStages))
        return false;
      if (!this.sourceStages.equals(that.sourceStages))
        return false;
    }

    boolean this_present_jobStatus = true && this.isSetJobStatus();
    boolean that_present_jobStatus = true && that.isSetJobStatus();
    if (this_present_jobStatus || that_present_jobStatus) {
      if (!(this_present_jobStatus && that_present_jobStatus))
        return false;
      if (!this.jobStatus.equals(that.jobStatus))
        return false;
    }

    boolean this_present_startTime = true && this.isSetStartTime();
    boolean that_present_startTime = true && that.isSetStartTime();
    if (this_present_startTime || that_present_startTime) {
      if (!(this_present_startTime && that_present_startTime))
        return false;
      if (!this.startTime.equals(that.startTime))
        return false;
    }

    boolean this_present_endTime = true && this.isSetEndTime();
    boolean that_present_endTime = true && that.isSetEndTime();
    if (this_present_endTime || that_present_endTime) {
      if (!(this_present_endTime && that_present_endTime))
        return false;
      if (!this.endTime.equals(that.endTime))
        return false;
    }

    boolean this_present_others = true && this.isSetOthers();
    boolean that_present_others = true && that.isSetOthers();
    if (this_present_others || that_present_others) {
      if (!(this_present_others && that_present_others))
        return false;
      if (!this.others.equals(that.others))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetJobName()) ? 131071 : 524287);
    if (isSetJobName())
      hashCode = hashCode * 8191 + jobName.hashCode();

    hashCode = hashCode * 8191 + ((isSetSubplans()) ? 131071 : 524287);
    if (isSetSubplans())
      hashCode = hashCode * 8191 + subplans.hashCode();

    hashCode = hashCode * 8191 + ((isSetSourceStages()) ? 131071 : 524287);
    if (isSetSourceStages())
      hashCode = hashCode * 8191 + sourceStages.hashCode();

    hashCode = hashCode * 8191 + ((isSetJobStatus()) ? 131071 : 524287);
    if (isSetJobStatus())
      hashCode = hashCode * 8191 + jobStatus.getValue();

    hashCode = hashCode * 8191 + ((isSetStartTime()) ? 131071 : 524287);
    if (isSetStartTime())
      hashCode = hashCode * 8191 + startTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetEndTime()) ? 131071 : 524287);
    if (isSetEndTime())
      hashCode = hashCode * 8191 + endTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetOthers()) ? 131071 : 524287);
    if (isSetOthers())
      hashCode = hashCode * 8191 + others.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Job other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetJobName()).compareTo(other.isSetJobName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobName, other.jobName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSubplans()).compareTo(other.isSetSubplans());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSubplans()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.subplans, other.subplans);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetSourceStages()).compareTo(other.isSetSourceStages());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSourceStages()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sourceStages, other.sourceStages);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetJobStatus()).compareTo(other.isSetJobStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobStatus, other.jobStatus);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStartTime()).compareTo(other.isSetStartTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStartTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.startTime, other.startTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEndTime()).compareTo(other.isSetEndTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEndTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.endTime, other.endTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOthers()).compareTo(other.isSetOthers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOthers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.others, other.others);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Job(");
    boolean first = true;

    sb.append("jobName:");
    if (this.jobName == null) {
      sb.append("null");
    } else {
      sb.append(this.jobName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("subplans:");
    if (this.subplans == null) {
      sb.append("null");
    } else {
      sb.append(this.subplans);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sourceStages:");
    if (this.sourceStages == null) {
      sb.append("null");
    } else {
      sb.append(this.sourceStages);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("jobStatus:");
    if (this.jobStatus == null) {
      sb.append("null");
    } else {
      sb.append(this.jobStatus);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("startTime:");
    if (this.startTime == null) {
      sb.append("null");
    } else {
      sb.append(this.startTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("endTime:");
    if (this.endTime == null) {
      sb.append("null");
    } else {
      sb.append(this.endTime);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("others:");
    if (this.others == null) {
      sb.append("null");
    } else {
      sb.append(this.others);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class JobStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobStandardScheme getScheme() {
      return new JobStandardScheme();
    }
  }

  private static class JobStandardScheme extends org.apache.thrift.scheme.StandardScheme<Job> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Job struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOB_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.jobName = iprot.readString();
              struct.setJobNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SUBPLANS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map114 = iprot.readMapBegin();
                struct.subplans = new java.util.HashMap<java.lang.Integer,Stage>(2*_map114.size);
                int _key115;
                @org.apache.thrift.annotation.Nullable Stage _val116;
                for (int _i117 = 0; _i117 < _map114.size; ++_i117)
                {
                  _key115 = iprot.readI32();
                  _val116 = new Stage();
                  _val116.read(iprot);
                  struct.subplans.put(_key115, _val116);
                }
                iprot.readMapEnd();
              }
              struct.setSubplansIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SOURCE_STAGES
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list118 = iprot.readListBegin();
                struct.sourceStages = new java.util.ArrayList<java.lang.Integer>(_list118.size);
                int _elem119;
                for (int _i120 = 0; _i120 < _list118.size; ++_i120)
                {
                  _elem119 = iprot.readI32();
                  struct.sourceStages.add(_elem119);
                }
                iprot.readListEnd();
              }
              struct.setSourceStagesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // JOB_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.jobStatus = fdu.daslab.thrift.base.ExecutionStatus.findByValue(iprot.readI32());
              struct.setJobStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.startTime = iprot.readString();
              struct.setStartTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.endTime = iprot.readString();
              struct.setEndTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // OTHERS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map121 = iprot.readMapBegin();
                struct.others = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map121.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key122;
                @org.apache.thrift.annotation.Nullable java.lang.String _val123;
                for (int _i124 = 0; _i124 < _map121.size; ++_i124)
                {
                  _key122 = iprot.readString();
                  _val123 = iprot.readString();
                  struct.others.put(_key122, _val123);
                }
                iprot.readMapEnd();
              }
              struct.setOthersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Job struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.jobName != null) {
        oprot.writeFieldBegin(JOB_NAME_FIELD_DESC);
        oprot.writeString(struct.jobName);
        oprot.writeFieldEnd();
      }
      if (struct.subplans != null) {
        oprot.writeFieldBegin(SUBPLANS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, struct.subplans.size()));
          for (java.util.Map.Entry<java.lang.Integer, Stage> _iter125 : struct.subplans.entrySet())
          {
            oprot.writeI32(_iter125.getKey());
            _iter125.getValue().write(oprot);
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.sourceStages != null) {
        oprot.writeFieldBegin(SOURCE_STAGES_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.sourceStages.size()));
          for (int _iter126 : struct.sourceStages)
          {
            oprot.writeI32(_iter126);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.jobStatus != null) {
        oprot.writeFieldBegin(JOB_STATUS_FIELD_DESC);
        oprot.writeI32(struct.jobStatus.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.startTime != null) {
        oprot.writeFieldBegin(START_TIME_FIELD_DESC);
        oprot.writeString(struct.startTime);
        oprot.writeFieldEnd();
      }
      if (struct.endTime != null) {
        oprot.writeFieldBegin(END_TIME_FIELD_DESC);
        oprot.writeString(struct.endTime);
        oprot.writeFieldEnd();
      }
      if (struct.others != null) {
        oprot.writeFieldBegin(OTHERS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.others.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter127 : struct.others.entrySet())
          {
            oprot.writeString(_iter127.getKey());
            oprot.writeString(_iter127.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class JobTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public JobTupleScheme getScheme() {
      return new JobTupleScheme();
    }
  }

  private static class JobTupleScheme extends org.apache.thrift.scheme.TupleScheme<Job> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Job struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetJobName()) {
        optionals.set(0);
      }
      if (struct.isSetSubplans()) {
        optionals.set(1);
      }
      if (struct.isSetSourceStages()) {
        optionals.set(2);
      }
      if (struct.isSetJobStatus()) {
        optionals.set(3);
      }
      if (struct.isSetStartTime()) {
        optionals.set(4);
      }
      if (struct.isSetEndTime()) {
        optionals.set(5);
      }
      if (struct.isSetOthers()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetJobName()) {
        oprot.writeString(struct.jobName);
      }
      if (struct.isSetSubplans()) {
        {
          oprot.writeI32(struct.subplans.size());
          for (java.util.Map.Entry<java.lang.Integer, Stage> _iter128 : struct.subplans.entrySet())
          {
            oprot.writeI32(_iter128.getKey());
            _iter128.getValue().write(oprot);
          }
        }
      }
      if (struct.isSetSourceStages()) {
        {
          oprot.writeI32(struct.sourceStages.size());
          for (int _iter129 : struct.sourceStages)
          {
            oprot.writeI32(_iter129);
          }
        }
      }
      if (struct.isSetJobStatus()) {
        oprot.writeI32(struct.jobStatus.getValue());
      }
      if (struct.isSetStartTime()) {
        oprot.writeString(struct.startTime);
      }
      if (struct.isSetEndTime()) {
        oprot.writeString(struct.endTime);
      }
      if (struct.isSetOthers()) {
        {
          oprot.writeI32(struct.others.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter130 : struct.others.entrySet())
          {
            oprot.writeString(_iter130.getKey());
            oprot.writeString(_iter130.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Job struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.jobName = iprot.readString();
        struct.setJobNameIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map131 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I32, org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.subplans = new java.util.HashMap<java.lang.Integer,Stage>(2*_map131.size);
          int _key132;
          @org.apache.thrift.annotation.Nullable Stage _val133;
          for (int _i134 = 0; _i134 < _map131.size; ++_i134)
          {
            _key132 = iprot.readI32();
            _val133 = new Stage();
            _val133.read(iprot);
            struct.subplans.put(_key132, _val133);
          }
        }
        struct.setSubplansIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list135 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.sourceStages = new java.util.ArrayList<java.lang.Integer>(_list135.size);
          int _elem136;
          for (int _i137 = 0; _i137 < _list135.size; ++_i137)
          {
            _elem136 = iprot.readI32();
            struct.sourceStages.add(_elem136);
          }
        }
        struct.setSourceStagesIsSet(true);
      }
      if (incoming.get(3)) {
        struct.jobStatus = fdu.daslab.thrift.base.ExecutionStatus.findByValue(iprot.readI32());
        struct.setJobStatusIsSet(true);
      }
      if (incoming.get(4)) {
        struct.startTime = iprot.readString();
        struct.setStartTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.endTime = iprot.readString();
        struct.setEndTimeIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TMap _map138 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.others = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map138.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key139;
          @org.apache.thrift.annotation.Nullable java.lang.String _val140;
          for (int _i141 = 0; _i141 < _map138.size; ++_i141)
          {
            _key139 = iprot.readString();
            _val140 = iprot.readString();
            struct.others.put(_key139, _val140);
          }
        }
        struct.setOthersIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

