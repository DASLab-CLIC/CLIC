/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package fdu.daslab.thrift.schedulercenter;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2021-05-24")
public class SchedulerResult implements org.apache.thrift.TBase<SchedulerResult, SchedulerResult._Fields>, java.io.Serializable, Cloneable, Comparable<SchedulerResult> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SchedulerResult");

  private static final org.apache.thrift.protocol.TField STAGE_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("stageList", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField STAGE_PLACEMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("stagePlacement", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField OTHERS_FIELD_DESC = new org.apache.thrift.protocol.TField("others", org.apache.thrift.protocol.TType.MAP, (short)16);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SchedulerResultStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SchedulerResultTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<fdu.daslab.thrift.base.Stage> stageList; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> stagePlacement; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> others; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STAGE_LIST((short)1, "stageList"),
    STAGE_PLACEMENT((short)2, "stagePlacement"),
    OTHERS((short)16, "others");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STAGE_LIST
          return STAGE_LIST;
        case 2: // STAGE_PLACEMENT
          return STAGE_PLACEMENT;
        case 16: // OTHERS
          return OTHERS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STAGE_LIST, new org.apache.thrift.meta_data.FieldMetaData("stageList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, fdu.daslab.thrift.base.Stage.class))));
    tmpMap.put(_Fields.STAGE_PLACEMENT, new org.apache.thrift.meta_data.FieldMetaData("stagePlacement", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.OTHERS, new org.apache.thrift.meta_data.FieldMetaData("others", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SchedulerResult.class, metaDataMap);
  }

  public SchedulerResult() {
  }

  public SchedulerResult(
    java.util.List<fdu.daslab.thrift.base.Stage> stageList,
    java.util.Map<java.lang.String,java.lang.String> stagePlacement,
    java.util.Map<java.lang.String,java.lang.String> others)
  {
    this();
    this.stageList = stageList;
    this.stagePlacement = stagePlacement;
    this.others = others;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SchedulerResult(SchedulerResult other) {
    if (other.isSetStageList()) {
      java.util.List<fdu.daslab.thrift.base.Stage> __this__stageList = new java.util.ArrayList<fdu.daslab.thrift.base.Stage>(other.stageList.size());
      for (fdu.daslab.thrift.base.Stage other_element : other.stageList) {
        __this__stageList.add(new fdu.daslab.thrift.base.Stage(other_element));
      }
      this.stageList = __this__stageList;
    }
    if (other.isSetStagePlacement()) {
      java.util.Map<java.lang.String,java.lang.String> __this__stagePlacement = new java.util.HashMap<java.lang.String,java.lang.String>(other.stagePlacement);
      this.stagePlacement = __this__stagePlacement;
    }
    if (other.isSetOthers()) {
      java.util.Map<java.lang.String,java.lang.String> __this__others = new java.util.HashMap<java.lang.String,java.lang.String>(other.others);
      this.others = __this__others;
    }
  }

  public SchedulerResult deepCopy() {
    return new SchedulerResult(this);
  }

  @Override
  public void clear() {
    this.stageList = null;
    this.stagePlacement = null;
    this.others = null;
  }

  public int getStageListSize() {
    return (this.stageList == null) ? 0 : this.stageList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<fdu.daslab.thrift.base.Stage> getStageListIterator() {
    return (this.stageList == null) ? null : this.stageList.iterator();
  }

  public void addToStageList(fdu.daslab.thrift.base.Stage elem) {
    if (this.stageList == null) {
      this.stageList = new java.util.ArrayList<fdu.daslab.thrift.base.Stage>();
    }
    this.stageList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<fdu.daslab.thrift.base.Stage> getStageList() {
    return this.stageList;
  }

  public SchedulerResult setStageList(@org.apache.thrift.annotation.Nullable java.util.List<fdu.daslab.thrift.base.Stage> stageList) {
    this.stageList = stageList;
    return this;
  }

  public void unsetStageList() {
    this.stageList = null;
  }

  /** Returns true if field stageList is set (has been assigned a value) and false otherwise */
  public boolean isSetStageList() {
    return this.stageList != null;
  }

  public void setStageListIsSet(boolean value) {
    if (!value) {
      this.stageList = null;
    }
  }

  public int getStagePlacementSize() {
    return (this.stagePlacement == null) ? 0 : this.stagePlacement.size();
  }

  public void putToStagePlacement(java.lang.String key, java.lang.String val) {
    if (this.stagePlacement == null) {
      this.stagePlacement = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.stagePlacement.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getStagePlacement() {
    return this.stagePlacement;
  }

  public SchedulerResult setStagePlacement(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> stagePlacement) {
    this.stagePlacement = stagePlacement;
    return this;
  }

  public void unsetStagePlacement() {
    this.stagePlacement = null;
  }

  /** Returns true if field stagePlacement is set (has been assigned a value) and false otherwise */
  public boolean isSetStagePlacement() {
    return this.stagePlacement != null;
  }

  public void setStagePlacementIsSet(boolean value) {
    if (!value) {
      this.stagePlacement = null;
    }
  }

  public int getOthersSize() {
    return (this.others == null) ? 0 : this.others.size();
  }

  public void putToOthers(java.lang.String key, java.lang.String val) {
    if (this.others == null) {
      this.others = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.others.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getOthers() {
    return this.others;
  }

  public SchedulerResult setOthers(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> others) {
    this.others = others;
    return this;
  }

  public void unsetOthers() {
    this.others = null;
  }

  /** Returns true if field others is set (has been assigned a value) and false otherwise */
  public boolean isSetOthers() {
    return this.others != null;
  }

  public void setOthersIsSet(boolean value) {
    if (!value) {
      this.others = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case STAGE_LIST:
      if (value == null) {
        unsetStageList();
      } else {
        setStageList((java.util.List<fdu.daslab.thrift.base.Stage>)value);
      }
      break;

    case STAGE_PLACEMENT:
      if (value == null) {
        unsetStagePlacement();
      } else {
        setStagePlacement((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case OTHERS:
      if (value == null) {
        unsetOthers();
      } else {
        setOthers((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STAGE_LIST:
      return getStageList();

    case STAGE_PLACEMENT:
      return getStagePlacement();

    case OTHERS:
      return getOthers();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STAGE_LIST:
      return isSetStageList();
    case STAGE_PLACEMENT:
      return isSetStagePlacement();
    case OTHERS:
      return isSetOthers();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof SchedulerResult)
      return this.equals((SchedulerResult)that);
    return false;
  }

  public boolean equals(SchedulerResult that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_stageList = true && this.isSetStageList();
    boolean that_present_stageList = true && that.isSetStageList();
    if (this_present_stageList || that_present_stageList) {
      if (!(this_present_stageList && that_present_stageList))
        return false;
      if (!this.stageList.equals(that.stageList))
        return false;
    }

    boolean this_present_stagePlacement = true && this.isSetStagePlacement();
    boolean that_present_stagePlacement = true && that.isSetStagePlacement();
    if (this_present_stagePlacement || that_present_stagePlacement) {
      if (!(this_present_stagePlacement && that_present_stagePlacement))
        return false;
      if (!this.stagePlacement.equals(that.stagePlacement))
        return false;
    }

    boolean this_present_others = true && this.isSetOthers();
    boolean that_present_others = true && that.isSetOthers();
    if (this_present_others || that_present_others) {
      if (!(this_present_others && that_present_others))
        return false;
      if (!this.others.equals(that.others))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetStageList()) ? 131071 : 524287);
    if (isSetStageList())
      hashCode = hashCode * 8191 + stageList.hashCode();

    hashCode = hashCode * 8191 + ((isSetStagePlacement()) ? 131071 : 524287);
    if (isSetStagePlacement())
      hashCode = hashCode * 8191 + stagePlacement.hashCode();

    hashCode = hashCode * 8191 + ((isSetOthers()) ? 131071 : 524287);
    if (isSetOthers())
      hashCode = hashCode * 8191 + others.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SchedulerResult other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetStageList()).compareTo(other.isSetStageList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStageList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stageList, other.stageList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetStagePlacement()).compareTo(other.isSetStagePlacement());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStagePlacement()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stagePlacement, other.stagePlacement);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOthers()).compareTo(other.isSetOthers());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOthers()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.others, other.others);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SchedulerResult(");
    boolean first = true;

    sb.append("stageList:");
    if (this.stageList == null) {
      sb.append("null");
    } else {
      sb.append(this.stageList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stagePlacement:");
    if (this.stagePlacement == null) {
      sb.append("null");
    } else {
      sb.append(this.stagePlacement);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("others:");
    if (this.others == null) {
      sb.append("null");
    } else {
      sb.append(this.others);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SchedulerResultStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SchedulerResultStandardScheme getScheme() {
      return new SchedulerResultStandardScheme();
    }
  }

  private static class SchedulerResultStandardScheme extends org.apache.thrift.scheme.StandardScheme<SchedulerResult> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SchedulerResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STAGE_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list10 = iprot.readListBegin();
                struct.stageList = new java.util.ArrayList<fdu.daslab.thrift.base.Stage>(_list10.size);
                @org.apache.thrift.annotation.Nullable fdu.daslab.thrift.base.Stage _elem11;
                for (int _i12 = 0; _i12 < _list10.size; ++_i12)
                {
                  _elem11 = new fdu.daslab.thrift.base.Stage();
                  _elem11.read(iprot);
                  struct.stageList.add(_elem11);
                }
                iprot.readListEnd();
              }
              struct.setStageListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // STAGE_PLACEMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map13 = iprot.readMapBegin();
                struct.stagePlacement = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map13.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key14;
                @org.apache.thrift.annotation.Nullable java.lang.String _val15;
                for (int _i16 = 0; _i16 < _map13.size; ++_i16)
                {
                  _key14 = iprot.readString();
                  _val15 = iprot.readString();
                  struct.stagePlacement.put(_key14, _val15);
                }
                iprot.readMapEnd();
              }
              struct.setStagePlacementIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // OTHERS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map17 = iprot.readMapBegin();
                struct.others = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map17.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key18;
                @org.apache.thrift.annotation.Nullable java.lang.String _val19;
                for (int _i20 = 0; _i20 < _map17.size; ++_i20)
                {
                  _key18 = iprot.readString();
                  _val19 = iprot.readString();
                  struct.others.put(_key18, _val19);
                }
                iprot.readMapEnd();
              }
              struct.setOthersIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SchedulerResult struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.stageList != null) {
        oprot.writeFieldBegin(STAGE_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.stageList.size()));
          for (fdu.daslab.thrift.base.Stage _iter21 : struct.stageList)
          {
            _iter21.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.stagePlacement != null) {
        oprot.writeFieldBegin(STAGE_PLACEMENT_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.stagePlacement.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter22 : struct.stagePlacement.entrySet())
          {
            oprot.writeString(_iter22.getKey());
            oprot.writeString(_iter22.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.others != null) {
        oprot.writeFieldBegin(OTHERS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.others.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter23 : struct.others.entrySet())
          {
            oprot.writeString(_iter23.getKey());
            oprot.writeString(_iter23.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SchedulerResultTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SchedulerResultTupleScheme getScheme() {
      return new SchedulerResultTupleScheme();
    }
  }

  private static class SchedulerResultTupleScheme extends org.apache.thrift.scheme.TupleScheme<SchedulerResult> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SchedulerResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStageList()) {
        optionals.set(0);
      }
      if (struct.isSetStagePlacement()) {
        optionals.set(1);
      }
      if (struct.isSetOthers()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetStageList()) {
        {
          oprot.writeI32(struct.stageList.size());
          for (fdu.daslab.thrift.base.Stage _iter24 : struct.stageList)
          {
            _iter24.write(oprot);
          }
        }
      }
      if (struct.isSetStagePlacement()) {
        {
          oprot.writeI32(struct.stagePlacement.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter25 : struct.stagePlacement.entrySet())
          {
            oprot.writeString(_iter25.getKey());
            oprot.writeString(_iter25.getValue());
          }
        }
      }
      if (struct.isSetOthers()) {
        {
          oprot.writeI32(struct.others.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter26 : struct.others.entrySet())
          {
            oprot.writeString(_iter26.getKey());
            oprot.writeString(_iter26.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SchedulerResult struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list27 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.stageList = new java.util.ArrayList<fdu.daslab.thrift.base.Stage>(_list27.size);
          @org.apache.thrift.annotation.Nullable fdu.daslab.thrift.base.Stage _elem28;
          for (int _i29 = 0; _i29 < _list27.size; ++_i29)
          {
            _elem28 = new fdu.daslab.thrift.base.Stage();
            _elem28.read(iprot);
            struct.stageList.add(_elem28);
          }
        }
        struct.setStageListIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map30 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.stagePlacement = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map30.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key31;
          @org.apache.thrift.annotation.Nullable java.lang.String _val32;
          for (int _i33 = 0; _i33 < _map30.size; ++_i33)
          {
            _key31 = iprot.readString();
            _val32 = iprot.readString();
            struct.stagePlacement.put(_key31, _val32);
          }
        }
        struct.setStagePlacementIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TMap _map34 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.others = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map34.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key35;
          @org.apache.thrift.annotation.Nullable java.lang.String _val36;
          for (int _i37 = 0; _i37 < _map34.size; ++_i37)
          {
            _key35 = iprot.readString();
            _val36 = iprot.readString();
            struct.others.put(_key35, _val36);
          }
        }
        struct.setOthersIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

